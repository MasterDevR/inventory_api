generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model role {
  id         String   @id @unique @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // relation 
  user       user[]
}

model stock_type {
  id         String   @id @unique @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // relation 
  stock      stock[]
}

model transaction_status {
  id           String        @id @unique @default(uuid())
  name         String        @unique
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  // relation 
  transactions transaction[]
}

model transaction_purpose {
  id           String        @id @unique @default(uuid())
  name         String
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  // relation 
  transactions transaction[]
}

model user {
  id              String        @id @unique @default(uuid())
  name            String?
  image           String?
  department_id   String        @unique
  role            String // FK
  department_code String        @unique
  department      String        @unique
  email           String?       @unique
  password        String
  created_at      DateTime      @default(now())
  // relation 
  updated_at      DateTime      @updatedAt
  Role            role          @relation(fields: [role], references: [id])
  transaction     transaction[]
}

model stock {
  id                     String          @id @unique @default(uuid())
  item                   String
  price                  Float
  description            String
  measurement            String
  stock_no               String          @unique
  re_order_point         String          @unique
  quantity               Int
  total_quantity_request Int             @default(0)
  image                  String
  reference              String
  consume_date           Int
  distributor            String
  stock_counter          Int             @default(0)
  stock_type             String
  created_at             DateTime        @default(now())
  updated_at             DateTime        @updatedAt
  // relation 
  stocktype              stock_type      @relation(fields: [stock_type], references: [id])
  stockHistories         stock_history[] //   one-to-many relationship
  transaction            transaction[]
}

model stock_history {
  id            String   @id @unique @default(uuid())
  stock_no      String
  price         Float
  quantity      Int
  distributor   String
  total_request Int      @default(0)
  created_at    DateTime @default(now())
  updatedAt     DateTime @updatedAt
  // relation 
  stock         stock    @relation(fields: [stock_no], references: [stock_no], onDelete: Cascade)
}

model transaction {
  id                  String              @id @default(uuid())
  transaction_id      String
  stock_no            String
  quantity            Int
  department_id       String // FK
  status              String
  transaction_purpose String
  created_at          DateTime            @default(now())
  updated_at          DateTime            @updatedAt
  // relation 
  stock               stock               @relation(fields: [stock_no], references: [stock_no], onDelete: Cascade)
  user                user                @relation(fields: [department_id], references: [department_id], onDelete: Cascade)
  Status              transaction_status  @relation(fields: [status], references: [id])
  TransactionType     transaction_purpose @relation(fields: [transaction_purpose], references: [id])
}
