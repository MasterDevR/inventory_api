generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model role {
  id         String   @id @unique @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model stock_type {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model transaction_status {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model transaction_purpose {
  id         String   @id @default(uuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model user {
  id              String   @id @default(uuid())
  name            String?
  image           String?
  department_id   String
  role            String
  department_code String
  department      String
  email           String?  @unique
  password        String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}

model stock {
  id               String   @id @default(uuid())
  item             String
  price            Float
  description      String
  measurement      String
  stock_no         String   @unique
  re_order_point   String
  image            String
  reference        String
  consume_date     Int
  distributor      String
  stock_counter    Int      @default(0)
  stock_type       String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  purchase_order   String
  quantity_issued  Int      @default(0)
  quantity_on_hand Int?
  purchase_request String?
}

model stock_history {
  id               String   @id @default(uuid())
  stock_no         String
  price            Float
  distributor      String
  created_at       DateTime @default(now())
  updatedAt        DateTime @updatedAt
  total_request    Int      @default(0)
  purchase_order   String
  quantity_issued  Int      @default(0)
  quantity_on_hand Int?
  purchase_request String?
}

model transaction {
  id                  String   @id @default(uuid())
  department_id       String
  status              String
  transaction_purpose String
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  ris                 Int?
}

model requisition_issue_slip_counter {
  id          Int      @id
  year        Int      @unique
  current_ris Int      @default(0)
  updated_at  DateTime @updatedAt
}

model transaction_item {
  id                String   @id @default(uuid())
  transaction_id    String
  stock_no          String
  quantity          Int
  approved_quantity Int      @default(0)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  history_id        String?
}

model admin_notification {
  id                  String   @id @default(uuid())
  transaction_id      String
  department          String
  transaction_purpose String
  no_item             Int
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  viewed              Boolean  @default(false)

  @@index([transaction_id], map: "admin_notification_transaction_id_fkey")
  @@index([transaction_purpose], map: "admin_notification_transaction_purpose_fkey")
}

model department_notification {
  id             String   @id @default(uuid())
  status         String
  transaction_id String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  department_id  String

  @@index([department_id], map: "department_notification_department_id_fkey")
  @@index([status], map: "department_notification_status_fkey")
  @@index([transaction_id], map: "department_notification_transaction_id_fkey")
}
